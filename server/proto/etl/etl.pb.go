// Code generated by protoc-gen-go. DO NOT EDIT.
// source: etl.proto

package etl

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddWordResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddWordResponse) Reset()         { *m = AddWordResponse{} }
func (m *AddWordResponse) String() string { return proto.CompactTextString(m) }
func (*AddWordResponse) ProtoMessage()    {}
func (*AddWordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_etl_a45fdd65d00661f4, []int{0}
}
func (m *AddWordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddWordResponse.Unmarshal(m, b)
}
func (m *AddWordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddWordResponse.Marshal(b, m, deterministic)
}
func (dst *AddWordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddWordResponse.Merge(dst, src)
}
func (m *AddWordResponse) XXX_Size() int {
	return xxx_messageInfo_AddWordResponse.Size(m)
}
func (m *AddWordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddWordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddWordResponse proto.InternalMessageInfo

func (m *AddWordResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Word struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Word                 string        `protobuf:"bytes,2,opt,name=word" json:"word,omitempty"`
	Pronunciation        string        `protobuf:"bytes,3,opt,name=pronunciation" json:"pronunciation,omitempty"`
	Definitions          []*Definition `protobuf:"bytes,4,rep,name=definitions" json:"definitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_etl_a45fdd65d00661f4, []int{1}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Word) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *Word) GetPronunciation() string {
	if m != nil {
		return m.Pronunciation
	}
	return ""
}

func (m *Word) GetDefinitions() []*Definition {
	if m != nil {
		return m.Definitions
	}
	return nil
}

type Definition struct {
	Id                   int32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	WordId               int32      `protobuf:"varint,2,opt,name=word_id,json=wordId" json:"word_id,omitempty"`
	Definition           string     `protobuf:"bytes,3,opt,name=definition" json:"definition,omitempty"`
	Pos                  string     `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`
	Examples             []*Example `protobuf:"bytes,5,rep,name=examples" json:"examples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Definition) Reset()         { *m = Definition{} }
func (m *Definition) String() string { return proto.CompactTextString(m) }
func (*Definition) ProtoMessage()    {}
func (*Definition) Descriptor() ([]byte, []int) {
	return fileDescriptor_etl_a45fdd65d00661f4, []int{2}
}
func (m *Definition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Definition.Unmarshal(m, b)
}
func (m *Definition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Definition.Marshal(b, m, deterministic)
}
func (dst *Definition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Definition.Merge(dst, src)
}
func (m *Definition) XXX_Size() int {
	return xxx_messageInfo_Definition.Size(m)
}
func (m *Definition) XXX_DiscardUnknown() {
	xxx_messageInfo_Definition.DiscardUnknown(m)
}

var xxx_messageInfo_Definition proto.InternalMessageInfo

func (m *Definition) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Definition) GetWordId() int32 {
	if m != nil {
		return m.WordId
	}
	return 0
}

func (m *Definition) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

func (m *Definition) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

func (m *Definition) GetExamples() []*Example {
	if m != nil {
		return m.Examples
	}
	return nil
}

type Example struct {
	DefinitionId         int32    `protobuf:"varint,1,opt,name=definition_id,json=definitionId" json:"definition_id,omitempty"`
	Foreign              string   `protobuf:"bytes,2,opt,name=foreign" json:"foreign,omitempty"`
	Native               string   `protobuf:"bytes,3,opt,name=native" json:"native,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Example) Reset()         { *m = Example{} }
func (m *Example) String() string { return proto.CompactTextString(m) }
func (*Example) ProtoMessage()    {}
func (*Example) Descriptor() ([]byte, []int) {
	return fileDescriptor_etl_a45fdd65d00661f4, []int{3}
}
func (m *Example) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Example.Unmarshal(m, b)
}
func (m *Example) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Example.Marshal(b, m, deterministic)
}
func (dst *Example) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Example.Merge(dst, src)
}
func (m *Example) XXX_Size() int {
	return xxx_messageInfo_Example.Size(m)
}
func (m *Example) XXX_DiscardUnknown() {
	xxx_messageInfo_Example.DiscardUnknown(m)
}

var xxx_messageInfo_Example proto.InternalMessageInfo

func (m *Example) GetDefinitionId() int32 {
	if m != nil {
		return m.DefinitionId
	}
	return 0
}

func (m *Example) GetForeign() string {
	if m != nil {
		return m.Foreign
	}
	return ""
}

func (m *Example) GetNative() string {
	if m != nil {
		return m.Native
	}
	return ""
}

func init() {
	proto.RegisterType((*AddWordResponse)(nil), "etl.AddWordResponse")
	proto.RegisterType((*Word)(nil), "etl.Word")
	proto.RegisterType((*Definition)(nil), "etl.Definition")
	proto.RegisterType((*Example)(nil), "etl.Example")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ETLClient is the client API for ETL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ETLClient interface {
	AddWord(ctx context.Context, in *Word, opts ...grpc.CallOption) (*AddWordResponse, error)
}

type eTLClient struct {
	cc *grpc.ClientConn
}

func NewETLClient(cc *grpc.ClientConn) ETLClient {
	return &eTLClient{cc}
}

func (c *eTLClient) AddWord(ctx context.Context, in *Word, opts ...grpc.CallOption) (*AddWordResponse, error) {
	out := new(AddWordResponse)
	err := c.cc.Invoke(ctx, "/etl.ETL/AddWord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ETLServer is the server API for ETL service.
type ETLServer interface {
	AddWord(context.Context, *Word) (*AddWordResponse, error)
}

func RegisterETLServer(s *grpc.Server, srv ETLServer) {
	s.RegisterService(&_ETL_serviceDesc, srv)
}

func _ETL_AddWord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Word)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ETLServer).AddWord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/etl.ETL/AddWord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ETLServer).AddWord(ctx, req.(*Word))
	}
	return interceptor(ctx, in, info, handler)
}

var _ETL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "etl.ETL",
	HandlerType: (*ETLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddWord",
			Handler:    _ETL_AddWord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "etl.proto",
}

func init() { proto.RegisterFile("etl.proto", fileDescriptor_etl_a45fdd65d00661f4) }

var fileDescriptor_etl_a45fdd65d00661f4 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0xdd, 0xee, 0x97, 0x3b, 0x6d, 0xad, 0x0c, 0xa2, 0xc1, 0x83, 0xac, 0xab, 0x87, 0x3d,
	0x48, 0xc1, 0xf6, 0x09, 0x04, 0x7b, 0x28, 0x78, 0x0a, 0x82, 0xc7, 0xba, 0x9a, 0x54, 0x02, 0x6b,
	0xb2, 0x64, 0xe3, 0xc7, 0xdd, 0x27, 0xf0, 0x8d, 0x25, 0x69, 0xdc, 0xad, 0xf5, 0xf6, 0xff, 0x18,
	0x26, 0x3f, 0x32, 0x90, 0x71, 0x53, 0x4f, 0x1b, 0xad, 0x8c, 0xc2, 0x90, 0x9b, 0xba, 0x38, 0x87,
	0xc9, 0x0d, 0x63, 0x0f, 0x4a, 0x33, 0xca, 0xdb, 0x46, 0xc9, 0x96, 0xe3, 0x01, 0x0c, 0x04, 0x23,
	0x41, 0x1e, 0x94, 0x31, 0x1d, 0x08, 0x56, 0x7c, 0x05, 0x10, 0xd9, 0x81, 0xdd, 0x02, 0x11, 0xa2,
	0x0f, 0xa5, 0x19, 0x19, 0xe4, 0x41, 0x99, 0x51, 0xa7, 0xf1, 0x12, 0xc6, 0x8d, 0x56, 0xf2, 0x4d,
	0x3e, 0x8b, 0xca, 0x08, 0x25, 0x49, 0xe8, 0xca, 0xbf, 0x21, 0x5e, 0xc3, 0x90, 0xf1, 0xb5, 0x90,
	0xc2, 0xba, 0x96, 0x44, 0x79, 0x58, 0x0e, 0x67, 0x93, 0xa9, 0x65, 0xbb, 0xed, 0x72, 0xba, 0x3d,
	0x53, 0x7c, 0x07, 0x00, 0x7d, 0xf7, 0x8f, 0xe5, 0x04, 0x52, 0xfb, 0xfe, 0x4a, 0x6c, 0x70, 0x62,
	0x9a, 0x58, 0xbb, 0x64, 0x78, 0x06, 0xd0, 0xaf, 0xf1, 0x34, 0x5b, 0x09, 0x1e, 0x42, 0xd8, 0x28,
	0x8b, 0x60, 0x0b, 0x2b, 0xb1, 0x84, 0x7d, 0xfe, 0x59, 0xbd, 0x36, 0x35, 0x6f, 0x49, 0xec, 0xc8,
	0x46, 0x8e, 0x6c, 0xb1, 0x09, 0x69, 0xd7, 0x16, 0x8f, 0x90, 0xfa, 0x10, 0x2f, 0x60, 0xdc, 0x2f,
	0x5d, 0x75, 0x68, 0xa3, 0x3e, 0x5c, 0x32, 0x24, 0x90, 0xae, 0x95, 0xe6, 0xe2, 0x45, 0xfa, 0x3f,
	0xfb, 0xb5, 0x78, 0x0c, 0x89, 0xac, 0x8c, 0x78, 0xe7, 0x9e, 0xd0, 0xbb, 0xd9, 0x1c, 0xc2, 0xc5,
	0xfd, 0x1d, 0x5e, 0x41, 0xea, 0xaf, 0x84, 0x99, 0x63, 0xb1, 0xf2, 0xf4, 0xc8, 0xc9, 0x9d, 0xf3,
	0x15, 0x7b, 0x4f, 0x89, 0xbb, 0xef, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0x51, 0xfc, 0xe1, 0x70,
	0xec, 0x01, 0x00, 0x00,
}
